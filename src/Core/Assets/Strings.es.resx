<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ERR_CAT_DUPLICATED" xml:space="preserve">
    <value>Categoría duplicada "{0}", las categorías deben ser unicas.</value>
    <comment>Medaka API</comment>
  </data>
  <data name="ERR_CAT_NOT_FOUND" xml:space="preserve">
    <value>La categoría "{0}" no existe en el archivo de configuración.</value>
    <comment>Medaka API</comment>
  </data>
  <data name="ERR_COMPARING_ASSEMBLY_VERSION" xml:space="preserve">
    <value>Se encontró un error al comparar dos versiones de ensamblados, los ensamblados deben tener el mismo nombre.</value>
    <comment>Lilith API</comment>
  </data>
  <data name="ERR_CREATING_FILE" xml:space="preserve">
    <value>Se ha encontrado un error al crear el archivo "{0}".</value>
    <comment>Aertith API</comment>
  </data>
  <data name="ERR_DECRYPTING_STR" xml:space="preserve">
    <value>Se ha encontrado un error al descifrar la cadena.</value>
    <comment>Alice API</comment>
  </data>
  <data name="ERR_DIR_MISSING" xml:space="preserve">
    <value>El directorio "{0}" no existe.</value>
    <comment>Aertith API</comment>
  </data>
  <data name="ERR_DOWNLOADING" xml:space="preserve">
    <value>Se ha encontrado un error descargando el archivo "{0}".</value>
    <comment>ReL API</comment>
  </data>
  <data name="ERR_ENCRYPTING_STR" xml:space="preserve">
    <value>Se encontró un error al cifrar la cadena.</value>
    <comment>Alice API</comment>
  </data>
  <data name="ERR_ENCRYPTION_EMPTY_STR" xml:space="preserve">
    <value>Se encontró un error al cifrar o descifrar la cadena, no se puede usar el cifrado con una cadena vacía.</value>
    <comment>Alice API</comment>
  </data>
  <data name="ERR_FILE_MISSING" xml:space="preserve">
    <value>El archivo "{0}" no existe.</value>
    <comment>Aertith API</comment>
  </data>
  <data name="ERR_INIT_MEDAKA" xml:space="preserve">
    <value>Error al inicializar el archivo de configuración de Medaka.</value>
    <comment>Medaka API</comment>
  </data>
  <data name="ERR_KEY_ALREADY_IN_XML_COLL" xml:space="preserve">
    <value>El elemento XElement no se puede agregar porque su clave ya forma parte de la XCollection.</value>
    <comment>Asuna API</comment>
  </data>
  <data name="ERR_PROPERTY_NOT_FOUND" xml:space="preserve">
    <value>No se pudo encontrar la propiedad "{0}" en la categoría "{1}".</value>
    <comment>Medaka API</comment>
  </data>
  <data name="ERR_PROP_DUPLICATED" xml:space="preserve">
    <value>Propiedad duplicada "{0}", las propiedades deben ser unicas.</value>
    <comment>Medaka API</comment>
  </data>
  <data name="ERR_SAVING_FILE" xml:space="preserve">
    <value>Se ha encontrado un error al guardar el archivo "{0}".</value>
    <comment>Aertith API</comment>
  </data>
  <data name="ERR_SCANNING" xml:space="preserve">
    <value>Se ha encontrado un error al escanear el "{0}".</value>
    <comment>Aertith API</comment>
  </data>
  <data name="ERR_XML_CHILDREN_INDEX_OUT_OF_BOUNDS" xml:space="preserve">
    <value>Se encontró un error al acceder a los niños por su índice. El índice "{0}" está fuera de límites.</value>
    <comment>Asuna API</comment>
  </data>
  <data name="ERR_XML_DUPLICATED_ATT" xml:space="preserve">
    <value>Se ha encontrado un error añadiendo el atributo "{0}" en el nodo "{0}". Los atributos deben ser únicos.</value>
    <comment>Asuna API</comment>
  </data>
  <data name="ERR_XML_EXPORTING" xml:space="preserve">
    <value>Se produjo un error al exportar el archivo xml.</value>
    <comment>Asuna API</comment>
  </data>
  <data name="ERR_XML_MISSING_ATTRIBUTE" xml:space="preserve">
    <value>El xml no tiene el atributo "{0}".</value>
    <comment>Asuna API</comment>
  </data>
  <data name="ERR_XML_MISSING_NODE" xml:space="preserve">
    <value>El xml no tiene el nodo "{0}".</value>
    <comment>Asuna API</comment>
  </data>
  <data name="ERR_XML_NODE_NOT_UNIQUE" xml:space="preserve">
    <value>Se ha encontrado un error, los nombres de nodo XML deben ser únicos.</value>
    <comment>Asuna API</comment>
  </data>
</root>